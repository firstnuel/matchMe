# Match-Me Project .gitignore

# ===== BACKEND (Go) =====

# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib
main
backend/main

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work

# Go build cache
go-build/

# ===== FRONTEND (React/TypeScript) =====

# Dependencies
frontend/node_modules/
frontend/.pnp
frontend/.pnp.js

# Production builds
frontend/build/
frontend/dist/
frontend/.next/
frontend/out/

# Testing
frontend/coverage/
frontend/.nyc_output

# Runtime data
frontend/pids
frontend/*.pid
frontend/*.seed
frontend/*.pid.lock

# Coverage directory used by tools like istanbul
frontend/.nyc_output

# Dependency directories
frontend/jspm_packages/

# Optional npm cache directory
frontend/.npm

# Optional eslint cache
frontend/.eslintcache

# Optional REPL history
frontend/.node_repl_history

# Output of 'npm pack'
frontend/*.tgz

# Yarn Integrity file
frontend/.yarn-integrity

# dotenv environment variables file
frontend/.env
frontend.env.local
frontend.env.development.local
frontend.env.test.local
frontend.env.production.local

# parcel-bundler cache (https://parceljs.org/)
frontend/.cache
frontend.parcel-cache

# next.js build output
frontend/.next

# nuxt.js build output
frontend/.nuxt

# vuepress build output
frontend/.vuepress/dist

# Serverless directories
frontend/.serverless

# FuseBox cache
frontend/.fusebox/

# DynamoDB Local files
frontend/.dynamodb/

# TernJS port file
frontend.tern-port

# ===== LOGS =====

# Log files
*.log
logs/
*.log.*

# Zap logger output
*.log.json
*.log.txt

# Application specific logs
backend/logs/
frontend/logs/

# ===== DATABASE =====

# PostgreSQL data
*.db
*.sqlite
*.sqlite3
postgres_data/
database/

# Database dumps
*.dump
*.sql

# ===== ENVIRONMENT & CONFIGURATION =====

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Configuration files with secrets
config/local.json
config/production.json
*.key
*.pem
*.crt

# ===== IDE & EDITOR =====

# VSCode
.vscode/
*.code-workspace

# IntelliJ IDEA
.idea/
*.iml
*.ipr
*.iws

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ===== OS GENERATED =====

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ===== TEMPORARY FILES =====

# Temporary files
*.tmp
*.temp
*.bak
*.backup
*.old
*.orig

# Cache directories
.cache/
tmp/
temp/

# ===== BUILD & DEPLOYMENT =====

# Build outputs
build/
dist/
out/
target/

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes
*.yaml.bak
*.yml.bak

# ===== TESTING & COVERAGE =====

# Test coverage
coverage/
*.cover
*.out

# Benchmark results
*.bench

# ===== DOCUMENTATION =====

# Generated documentation
docs/build/
docs/_build/

# ===== MISCELLANEOUS =====

# Backup files
*.bak
*.backup

# Archive files
*.zip
*.tar.gz
*.rar

# Lock files (keep package-lock.json and yarn.lock)
# package-lock.json
# yarn.lock

# ===== PROJECT SPECIFIC =====

# Match-Me specific
uploads/
media/
static/uploads/
user_photos/
profile_pictures/

# Sample data
sample_data/
test_data/
fixtures/

# Local development
local/
dev/
development/

# ===== DESIGN & PLANNING =====

# Figma design files and exports
Figma/
*.fig
*.sketch
design/
designs/

# Planning and documentation
plan/
docs/plan/
*.md.bak
planning/
roadmap/

# ===== SECURITY =====

# Private keys and certificates
*.key
*.pem
*.crt
*.csr
*.p12
*.pfx

# JWT secrets
jwt_secret.txt
.secret

# API keys
api_keys.txt
.secrets
